
- name: catalouge
  hosts: catalogue
  become: yes
  tasks:
   - name: disable old node js and enable node js
     ansibible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

   - name: Install node js
     ansible.builtin.dnf:
      name: nodejs
      state: yes

   - name: create  roboshop user
     ansible.built.user:
      name: roboshop

   - name: Recursively remove app directory
     ansible.builtin.file:
      path: /app
      state: absent

   - name: create app directory
     ansible.builtin.file:
      path: /app
      state: directory

   - name: download cart application
     ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

   - name: extract cart application
     ansible.builtin.unarchive:
      src: /tmp/cart.zip
      dest: /app
      remote_src: yes

   - name: install dependencies     
     ansible.buitlin.command: npm install
     args:
      chdir: /app

   - name: copy cart service
     ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
   
   - name: deamon realod and start
     ansible.builtin.systemd_service:
      deamon_reload: true

   - name: Copy mongodb repo
     ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongodb.repo

   - name: install mongodb client
     ansible.builtin.package:
       name: mongodb-org-shell
       state: present

   - name: get the categories count
     ansible.builtin.command:  mongo --host mongodb.daws76s.online --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
     register: product_count

   - name: load catalogue data
     ansible.builtin.command: mongo --host mongodb.daws76s.online < /app/schema/catalogue.js
     when: product_count.stdout == "0" # keep double quotes

   - name: start and enable catalogue
     ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: yes